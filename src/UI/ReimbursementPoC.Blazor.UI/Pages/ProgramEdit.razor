@page "/program/edit/{programId}"
@using Microsoft.AspNetCore.Authorization;
@using ReimbursementPoC.Blazor.UI.Model;
@inject HttpClient Http
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]
<h1>Edit Program</h1>
<hr />

<EditForm Model="@program" OnValidSubmit="SaveProgram">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="program.Name" />
        </div>
        <ValidationMessage For="@(() => program.Name)" />
    </div>
    <div class="mb-3">
        <label for="Description" class="form-label">Description</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="program.Description" />
        </div>
        <ValidationMessage For="@(() => program.Description)" />
    </div>

    <div class="mb-3">
        <label for="State" class="form-label">State</label>
        <div class="col-md-4">
            <InputSelect @bind-Value="program.StateId">
                <option value="0">Select state ...</option>
                <option value="1">Alabama</option>
                <option value="2">Alaska</option>
            </InputSelect>
        </div>
        <ValidationMessage For="@(() => program.StateId)" />
    </div>

    <div class="mb-3">
        <label for="StartDate" class="form-label">Start Date</label>
        <div class="col-md-4">
            <InputDate @bind-Value="@program.StartDate" @bind-Value:format="dd/MM/yyyy" />
        </div>
        <ValidationMessage For="@(() => program.StartDate)" />
    </div>

    <div class="mb-3">
        <label for="EndDate" class="form-label">End Date</label>
        <div class="col-md-4">
            <InputDate @bind-Value="@program.EndDate" @bind-Value:format="dd/MM/yyyy" />
        </div>
        <ValidationMessage For="@(() => program.EndDate)" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>

</EditForm>

@code {
    [Parameter]
    public string programId { get; set; }
    UpdateProgramRequest program = new UpdateProgramRequest();

    protected override async Task OnInitializedAsync()
    {
        var result = await Http.GetFromJsonAsync<ProgramEntityItem>("https://localhost:7120/program/api/programs/" + programId);

        program.Id = result.Id;
        program.Description = result.Description;
        program.StartDate = result.StartDate;
        program.EndDate = result.EndDate;
        program.LastModified = result.LastModified;
        program.StateId = GetStateId(result.State);
    }

    private int GetStateId(string name)
    {
        // ToDo
        if (name == "Alabama")
        {
            return 1;
        }
        else
        {
            return 2;
        }
    }

    protected async Task SaveProgram()
    {
        var result = await Http.PatchAsJsonAsync("https://localhost:7120/program/api/programs" + program.Id, program);

        if (result.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/program/list");
        }
        else
        {
            //NavigationManager.NavigateTo("/program/details");
        }
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/program/list");
    }
}