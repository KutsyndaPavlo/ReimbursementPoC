@page "/service/edit/{serviceId}"
@using Microsoft.AspNetCore.Authorization;
@using ReimbursementPoC.Blazor.UI.Model;
@inject HttpClient Http
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]
<h1>Edit Service</h1>
<hr />

<EditForm Model="@service" OnValidSubmit="SaveService">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="service.Name" />
        </div>
        <ValidationMessage For="@(() => service.Name)" />
    </div>
    <div class="mb-3">
        <label for="Description" class="form-label">Description</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="service.Description" />
        </div>
        <ValidationMessage For="@(() => service.Description)" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>

</EditForm>

@code {
    [Parameter]
    public string serviceId { get; set; }
    UpdateServiceRequest service = new UpdateServiceRequest();

    protected override async Task OnInitializedAsync()
    {
        var result = await Http.GetFromJsonAsync<ServiceDto>("/service/api/services/" + serviceId);

        service.Id = result.Id;
        service.Name = result.Name;
        service.Description = result.Description;
        service.LastModified = result.LastModified;
    }

    protected async Task SaveService()
    {
        var result = await Http.PutAsJsonAsync("/service/api/services/" + service.Id, service);

        if (result.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/service/list");
        }
        else
        {
            //NavigationManager.NavigateTo("/service/details");
        }
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/service/list");
    }
}