trigger:
- main

name: release-$(date:yyyyMMdd)$(rev:.r)

variables:
  releaseBranchName: 'main'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '20.x'
        displayName: 'Install Node.js 20.x'

      - script: |
          cd src/UI/reimbursement-poc-angular-ui/
          npm install -g @angular/cli
          npm install
          ng build
        displayName: 'npm install and build'
        workingDirectory: '$(Build.SourcesDirectory)'
      # - task: CmdLine@2
      #   displayName: "Run unit tests"
      #   inputs:
      #     script: |
      #       cd src/UI/reimbursement-poc-angular-ui/
      #       ng test --browsers=ChromeHeadless --code-coverage --watch=false
      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/src/UI/reimbursement-poc-angular-ui/dist/reimbursement-poc-angular-ui/browser'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          ArtifactName: 'drop'
          publishLocation: 'Container'

- stage: 'Dev'
  displayName: 'Deploy to the dev environment'
  dependsOn: Build
  condition: |
    and
    (
      succeeded(),
      eq(variables['Build.SourceBranchName'], variables['releaseBranchName'])
    )
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: Dev
    strategy:
      runOnce:
        deploy:
          steps:         
          - download: current
            artifact: drop
          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy Azure App Service'
            inputs:
              azureSubscription: 'azureResourceManagerConnection'
              appType: 'webAppLinux'
              WebAppName: 'riauidev'
              StartupCommand: 'pm2 serve /home/site/wwwroot --no-daemon --spa'
              WebConfigParameters: '-Handler iisnode -NodeStartFile server.js -appType node'
              AppSettings: '-WEBSITE_NODE_DEFAULT_VERSION 6.9.1'
              packageForLinux: '$(Pipeline.Workspace)/drop/*.zip'
